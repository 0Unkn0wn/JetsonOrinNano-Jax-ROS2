
ARG VERSION=r35.4.1
#FROM nvcr.io/nvidia/l4t-jetpack:${VERSION}
FROM dustynv/ros:humble-desktop-l4t-${VERSION}

RUN apt-get update && apt-get install -y nano git software-properties-common texlive-xetex texlive-fonts-recommended texlive-plain-generic wget binutils xz-utils ca-certificates \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# download the CUDA Toolkit local installer
RUN wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/arm64/cuda-ubuntu2004.pin -O /etc/apt/preferences.d/cuda-repository-pin-600 && \
    wget https://developer.download.nvidia.com/compute/cuda/12.2.2/local_installers/cuda-tegra-repo-ubuntu2004-12-2-local_12.2.2-1_arm64.deb && \
    dpkg -i cuda-tegra-repo-*.deb && \
    rm cuda-tegra-repo-*.deb 

# add the signed keys
RUN cp /var/cuda-tegra-repo-*/cuda-tegra-*-keyring.gpg /usr/share/keyrings/

# manually extract cuda-compat
RUN mkdir /var/cuda-compat && \
    cd /var/cuda-compat && \
    ar x ../cuda-tegra-repo-*/cuda-compat-*.deb && \
    tar xvf data.tar.xz -C / && \
    rm -rf /var/cuda-compat
    
# install cuda-toolkit (doesn't depend on cuda-compat/nvidia-l4t-core)
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
            cuda-toolkit-* \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean


RUN echo 'export PATH=/usr/local/cuda/bin:$PATH \n\
export LD_LIBRARY_PATH=/usr/local/cuda/compat:/usr/local/cuda/lib64:${LD_LIBRARY_PATH} \n'>> ~/.bashrc

RUN add-apt-repository ppa:deadsnakes/ppa 
RUN apt-get update
RUN apt-get install -y python3.9 python3.9-dev python3-pip
RUN pip3 install virtualenv
RUN virtualenv -p /usr/bin/python3.9 py39

RUN mkdir Downloads/
RUN cd Downloads/
RUN wget https://github.com/0Unkn0wn/JetsonOrinNano-Jax-ROS2/releases/download/v0.4.16/jaxlib-0.4.16.dev20230929-cp39-cp39-manylinux2014_aarch64.whl
RUN git clone https://github.com/google/jax.git --branch jaxlib-v0.4.16 --single-branch --depth=1

RUN /bin/bash -c "source py39/bin/activate \
	&& pip3 install jupyter lab matplotlib ipython \
	&& ipython kernel install --user --name=py39venv \
	&& pip3 install jaxlib-0.4.16.dev20230929-cp39-cp39-manylinux2014_aarch64.whl \ 
	&& cd jax/ \
	&& pip3 install . \
	&& cd .. \
	&& jupyter lab --generate-config \
	&& rm -rf jax/"

RUN rm jaxlib-0.4.16.dev20230929-cp39-cp39-manylinux2014_aarch64.whl

COPY jupyter_run.sh /
COPY jax_performance.ipynb /
